#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# From here on, do NOT exit the script if any errors occur
set +e

# If the file system gets corrupted, it is often mounted as read-only.  I have
# found that a reboot will generally fix the problem.  Look for a "ro" 
# read-only indicator in /proc/mounts and reboot if it is found.  All filesystems
# are normally mounted read-write (rw).
if grep "ro," /proc/mounts
then
   /sbin/reboot
fi

# Below I create a "forcefsck" file in /, which
# causes fsck to run on every boot (which then removes the forcefsck file). I 
# also have set FSCKFIX=yes in the/etc/default/rcS file, which will cause fsck
# to attempt to repair even serious errors; a "no" causes fsck to repair minor
# errors but requires human intervention for more serious errors.
touch /forcefsck

# If the Ethernet port has no IP, Set a fixed IP on the port so a 
# direct connection can occur.
if /sbin/ifconfig | grep -A1 eth0 | grep inet
then
   echo Ethernet has address
else
   /sbin/ifconfig eth0 169.254.30.2
   echo eth0 set to 169.254.30.2
fi

# Connect to the internet via the 3G modem.
/home/pi/pi_logger/scripts/start_cell_internet.py

# Upload pi_logger error/debug log files to analysisnorth.com. The script looks
# at a value in the settings.py file to determine whether it really should
# upload.
/home/pi/pi_logger/scripts/upload_logs.py

# Start up the datalogger
/home/pi/pi_logger/pi_logger.py &

exit 0
