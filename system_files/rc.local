#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# From here on, do NOT exit the script if any errors occur
set +e

# If the file system gets corrupted, it is often mounted as read-only.  I have
# found that a reboot will generally fix the problem.  Look for a "ro" 
# read-only indicator in /proc/mounts and reboot if it is found.  All filesystems
# are normally mounted read-write (rw).
if grep "ro," /proc/mounts
then
   /sbin/reboot
   exit
fi

# Below I create a "forcefsck" file in /, which
# causes fsck to run on every boot (which then removes the forcefsck file). I 
# also have set FSCKFIX=yes in the/etc/default/rcS file, which will cause fsck
# to attempt to repair even serious errors; a "no" causes fsck to repair minor
# errors but requires human intervention for more serious errors.
touch /forcefsck

# sometime usb_modeswitch does not work the first time and needs
# to be retriggered.  If we see a Huawei USB device but not modem
# sym link, retrigger the modem.
if ! [ -e /dev/gsmmodem ]
then
    # check for Huawei device
    if lsusb | grep Huawei 
    then
        /sbin/udevadm trigger
        sleep 25
    fi
fi

# Connect to the internet via the cell modem, if it is present.
if [ -e /dev/gsmmodem ]
then
    # There is a cell modem connected.  Indicate that
    # in a file, then configure and dial the cell modem.
    echo 1 > /var/run/network/cell_modem
    /usr/bin/wvdialconf     # run config utility
    /home/pi/pi_logger/scripts/start_cell_internet.py
else
    # Indicate no cell modem connected.
    echo 0 > /var/run/network/cell_modem
fi

# Start up the datalogger
/home/pi/pi_logger/pi_logger.py &

exit 0
